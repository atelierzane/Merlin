<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Light Minimalist Button with 3D Glossy Look Style -->
    <Style x:Key="LightMinimalistButtonStyle_Inventory" TargetType="Button">
        <Setter Property="Height" Value="45" />
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" 
                        CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="White" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E5E5E5"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#D6D6D6"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Light Minimalist Button with 3D Glossy Look Style -->
    <Style x:Key="LightMinimalistButtonStyle_Short" TargetType="Button">
        <Setter Property="Height" Value="25" />
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" 
                        CornerRadius="2.5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="White" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E5E5E5"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#D6D6D6"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark Minimalist Button with 3D Glossy Look Style -->
    <Style x:Key="DarkMinimalistButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" 
                        CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#555555" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#444444"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#222222"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark Minimalist Button with 3D Glossy Look Style -->
    <Style x:Key="DarkMinimalistButtonStyle_Inventory" TargetType="Button">
        <Setter Property="Height" Value="45" />
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" 
                        CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#555555" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#444444"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#222222"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DarkMinimalistButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="DarkMinimalistButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>



    <!-- Light Minimalist Search Box Style -->
    <Style x:Key="LightMinimalistSearchBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" 
                        CornerRadius="2.5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="White" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark Minimalist Search Box Style -->
    <Style x:Key="DarkMinimalistSearchBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" 
                        CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#555555" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LightMinimalistButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Margin" Value="0,1,0,0"/>
    </Style>

    <Style x:Key="LightMinimalistButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#181818" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>

    <!-- ToggleButton Style for ComboBox -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Border Background="Transparent" CornerRadius="5" BorderBrush="Transparent" BorderThickness="0">
            <Path x:Name="Arrow" Fill="#777777" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Center"
              Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Border>
    </ControlTemplate>

    <!-- Light Minimalist ComboBox Style -->
    <Style x:Key="LightMinimalistComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" 
                        CornerRadius="2.5">
                        <Grid>
                            <!-- Background rectangle -->
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="White" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <!-- Content -->
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            ClickMode="Press"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />

                            <ContentPresenter 
                            Name="ContentSite"
                            IsHitTestVisible="False" 
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            Content="{TemplateBinding SelectionBoxItem}" 
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            Margin="10,0,10,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>

                            <!-- Drop Down -->
                            <Popup 
                            Name="Popup" 
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}" 
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}">
                                    <Border 
                                    Name="DropDownBorder" 
                                    Background="White" 
                                    BorderThickness="1" 
                                    CornerRadius="5" 
                                    BorderBrush="#D1D1D1" />
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="iconButton" TargetType="Button">
        <!--Button style idle-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--Button style on hover-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="controlButton" TargetType="Button">
        <!--Button style idle-->
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                     CornerRadius="0,0,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--Button style on hover-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>

    <Style x:Key="controlToggleButtonLight" TargetType="ToggleButton">
        <!-- ToggleButton style idle -->
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource merlinWhite_brush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <fa:IconImage x:Name="Icon" Icon="Bars" Width="16" Height="16" Foreground="{TemplateBinding Foreground}" Margin="0,0,5,0">
                                <fa:IconImage.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </fa:IconImage.RenderTransform>
                                <fa:IconImage.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </fa:IconImage.RenderTransformOrigin>
                            </fa:IconImage>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Bounce Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <!-- Flip Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="-1" Duration="0:0:0.1" BeginTime="0:0:0.1"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1" BeginTime="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- ToggleButton style on hover -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="Red" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="{StaticResource merlinWhite}" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="controlToggleButtonIconLight" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>
    
    

</ResourceDictionary>