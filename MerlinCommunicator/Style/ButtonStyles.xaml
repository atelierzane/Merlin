<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MerlinCommunicator.Controls"
                    xmlns:helpers="clr-namespace:MerlinCommunicator.Helpers">



    <Style x:Key="ellipseButton4" TargetType="Button">
        <Setter Property="Background" Value="#193060"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBorder"
                    Background="{TemplateBinding Background}"
                    Width="175" Height="45"
                    BorderThickness="1.5" BorderBrush="#193060"
                    CornerRadius="2.5"
                    RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">


                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.15"
                                                 To="#00C6FF" 
                                                 Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                 Storyboard.TargetName="ButtonBorder" />
                                        <DoubleAnimation Duration="0:0:0.1"
                                             To="1.05"
                                             Storyboard.TargetProperty="RenderTransform.ScaleX"
                                             Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                             To="1.05"
                                             Storyboard.TargetProperty="RenderTransform.ScaleY"
                                             Storyboard.TargetName="ButtonBorder"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#1B49A7"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1"
                                         To="0.95"
                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                         To="0.95"
                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                         BeginTime="0:0:0.1"
                                         To="1.0"
                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                         BeginTime="0:0:0.1"
                                         To="1.0"
                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         Storyboard.TargetName="ButtonBorder"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#6AAFEE"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#193060"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="tileButtonSmallSquare" TargetType="Button">
        <Setter Property="Height" Value="125" />
        <Setter Property="Width" Value="125" />
        <Setter Property="Foreground" Value="#F1F1F1" />
        <Setter Property="Background" Value="#00C6FF" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Effect">
            <Setter.Value>

                <DropShadowEffect BlurRadius="10" ShadowDepth="10" Opacity="0.35" Color="Black"/>
            </Setter.Value>

        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Effect="{TemplateBinding Effect}"
                            CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.045" To="1.015" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.045" To="1.015" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                        <DoubleAnimation Duration="0:0:0.045" To="7.5" 
                                Storyboard.TargetProperty="Effect.ShadowDepth" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                        <DoubleAnimation Duration="0:0:0.075" To="5" 
                                Storyboard.TargetProperty="Effect.ShadowDepth" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Trigger for the mouse down event to scale the button down -->
            <EventTrigger RoutedEvent="UIElement.PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.1" To="0.975" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.1" To="0.975" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Trigger for the mouse up event to scale the button back to original size -->
            <EventTrigger RoutedEvent="UIElement.PreviewMouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="tileButtonIconLightSmall" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50"/>

    </Style>


    <Style x:Key="tileButtonIconLight" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="75"/>

    </Style>



    <Style x:Key="tileHalfButton" TargetType="Button">
        <Setter Property="Height" Value="125" />
        <Setter Property="Width" Value="250" />
        <Setter Property="Foreground" Value="#F1F1F1" />
        <Setter Property="Background" Value="#00C6FF" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" ShadowDepth="5" Opacity="0.35" Color="Black"/>
            </Setter.Value>

        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Effect="{TemplateBinding Effect}"
                            CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.045" To="1.015" 
                                   Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.045" To="1.015" 
                                   Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                        <DoubleAnimation Duration="0:0:0.045" To="7.5" 
                                   Storyboard.TargetProperty="Effect.ShadowDepth" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                   Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                   Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                        <DoubleAnimation Duration="0:0:0.075" To="5" 
                                   Storyboard.TargetProperty="Effect.ShadowDepth" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Trigger for the mouse down event to scale the button down -->
            <EventTrigger RoutedEvent="UIElement.PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.1" To="0.975" 
                                   Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.1" To="0.975" 
                                   Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Trigger for the mouse up event to scale the button back to original size -->
            <EventTrigger RoutedEvent="UIElement.PreviewMouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                   Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                   Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="tileButtonSmall" TargetType="Button">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="125" />
        <Setter Property="Foreground" Value="#F1F1F1" />
        <Setter Property="Background" Value="#00C6FF" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Effect">
            <Setter.Value>

                <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.05" Color="Black"/>
            </Setter.Value>

        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                   Effect="{TemplateBinding Effect}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.045" To="1.015" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.045" To="1.015" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                        <DoubleAnimation Duration="0:0:0.045" To="4" 
                                Storyboard.TargetProperty="Effect.ShadowDepth" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                        <DoubleAnimation Duration="0:0:0.075" To="2" 
                                Storyboard.TargetProperty="Effect.ShadowDepth" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Trigger for the mouse down event to scale the button down -->
            <EventTrigger RoutedEvent="UIElement.PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.1" To="0.975" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.1" To="0.975" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Trigger for the mouse up event to scale the button back to original size -->
            <EventTrigger RoutedEvent="UIElement.PreviewMouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="tileButtonSmallIconLight" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="75"/>

    </Style>


    <Style x:Key="LightMinimalistComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>


    <Style x:Key="iconButton" TargetType="Button">
        <!--Button style idle-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--Button style on hover-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="controlButton" TargetType="Button">
        <!--Button style idle-->
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#410141"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                       CornerRadius="0,0,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--Button style on hover-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>




    <Style x:Key="homeScreenButton" TargetType="Button">
        <Setter Property="Foreground" Value="#181818"/>
        <Setter Property="Height" Value="70" />
        <Setter Property="Width" Value="300"/>
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Medium" />

        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5">
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#F1F1F1" Offset="0" />
                                <GradientStop Color="#EBEBEB" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>

            </Setter.Value>

        </Setter>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#00C6FF" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#181818" Duration="0:0:0.15" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="tileButton" TargetType="Button">
        <Setter Property="Height" Value="250" />
        <Setter Property="Width" Value="250" />
        <Setter Property="Foreground" Value="#F1F1F1" />
        <Setter Property="Background" Value="#00C6FF" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" ShadowDepth="5" Opacity="0.35" Color="Black"/>
            </Setter.Value>

        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Effect="{TemplateBinding Effect}"
                            CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.045" To="1.015" 
                                     Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.045" To="1.015" 
                                     Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                        <DoubleAnimation Duration="0:0:0.045" To="7.5" 
                                     Storyboard.TargetProperty="Effect.ShadowDepth" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                     Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                     Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                        <DoubleAnimation Duration="0:0:0.075" To="5" 
                                     Storyboard.TargetProperty="Effect.ShadowDepth" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Trigger for the mouse down event to scale the button down -->
            <EventTrigger RoutedEvent="UIElement.PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.1" To="0.975" 
                                     Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.1" To="0.975" 
                                     Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Trigger for the mouse up event to scale the button back to original size -->
            <EventTrigger RoutedEvent="UIElement.PreviewMouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                     Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" />
                        <DoubleAnimation Duration="0:0:0.075" To="1" 
                                     Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ellipseButton3" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.15"
                                              To="Transparent"
                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                              Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.15"
                                               To="1.0"
                                               Storyboard.TargetProperty="RenderTransform.ScaleX"
                                               Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.15"
                                               To="1.0"
                                               Storyboard.TargetProperty="RenderTransform.ScaleY"
                                               Storyboard.TargetName="ButtonBorder"/>
                                    </Storyboard>
                                </VisualState>

                                <!-- Pressed State -->
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1"
                                           To="0.95"
                                           Storyboard.TargetProperty="RenderTransform.ScaleX"
                                           Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                           To="0.95"
                                           Storyboard.TargetProperty="RenderTransform.ScaleY"
                                           Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                           BeginTime="0:0:0.1"
                                           To="1.0"
                                           Storyboard.TargetProperty="RenderTransform.ScaleX"
                                           Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                           BeginTime="0:0:0.1"
                                           To="1.0"
                                           Storyboard.TargetProperty="RenderTransform.ScaleY"
                                           Storyboard.TargetName="ButtonBorder"/>
                                        <ColorAnimation Duration="0:0:0.15"
                                              To="#00C6FF"
                                              Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                              Storyboard.TargetName="ButtonBorder"/>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.15"
                                               To="#00C6FF" 
                                               Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                               Storyboard.TargetName="ButtonBorder" />

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ButtonBorder"
                              Background="{TemplateBinding Background}"
                              Width="238" Height="60"
                              BorderThickness=".75" BorderBrush="#1B49A7"
                              RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ellipseButton2" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.15"
                                                    To="Transparent"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.15"
                                                     To="1.0"
                                                     Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                     Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.15"
                                                     To="1.0"
                                                     Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                     Storyboard.TargetName="ButtonBorder"/>
                                    </Storyboard>
                                </VisualState>

                                <!-- Pressed State -->
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1"
                                                 To="0.95"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                 Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                                 To="0.95"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                                 BeginTime="0:0:0.1"
                                                 To="1.0"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                 Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                                 BeginTime="0:0:0.1"
                                                 To="1.0"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 Storyboard.TargetName="ButtonBorder"/>
                                        <ColorAnimation Duration="0:0:0.15"
                                                    To="#00C6FF"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    Storyboard.TargetName="ButtonBorder"/>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.15"
                                                     To="#00C6FF" 
                                                     Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                     Storyboard.TargetName="ButtonBorder" />
                                        <DoubleAnimation Duration="0:0:0.1"
                                                 To="1.05"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                 Storyboard.TargetName="ButtonBorder"/>
                                        <DoubleAnimation Duration="0:0:0.1"
                                                 To="1.05"
                                                 Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 Storyboard.TargetName="ButtonBorder"/>


                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            Width="175" Height="45"
                            BorderThickness=".75" BorderBrush="#1B49A7"
                            CornerRadius="2.5"
                            RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="controlButtonLight" TargetType="Button">
        <!--Button style idle-->
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="0,0,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--Button style on hover-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#00C6FF" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F1F1F1" Duration="0:0:0.15" AccelerationRatio=".7"/>

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="controlButtonIconLight" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>

    <Style x:Key="controlButtonLight_ClosePower" TargetType="Button">
        <!--Button style idle-->
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                      CornerRadius="0,0,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--Button style on hover-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="{StaticResource controlButtonHover_Close}" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F1F1F1" Duration="0:0:0.15" AccelerationRatio=".7"/>

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="controlButtonIconLight_ClosePower" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>

    <Style x:Key="controlButtonDark_ClosePower" TargetType="Button">
        <!--Button style idle-->
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#181818"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                      CornerRadius="0,0,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--Button style on hover-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="{StaticResource controlButtonHover_Close}" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#181818" Duration="0:0:0.15" AccelerationRatio=".7"/>

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="controlButtonIconDark_ClosePower" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>





    <Style x:Key="MenuBarRadioButton" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Foreground" Value="#00C6FF" />
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation AutoReverse="True" 
                                             Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" 
                                             To="10" 
                                             Duration="0:0:0.1" />

                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" 
                                             To="0" 
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>

            </DataTrigger>


        </Style.Triggers>



    </Style>

    <Style x:Key="menuBarButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="25
                "/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform Y="0"/>
            </Setter.Value>
        </Setter>


        <Style.Triggers>

            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Foreground" Value="#00C6FF"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <DoubleAnimation AutoReverse="True" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" To="-4" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" To="0" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F1F1F1" Duration="0:0:0.1" AccelerationRatio=".7"/>

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F1F1F1" Duration="0:0:0.15" AccelerationRatio=".7"/>

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>

    </Style>


    <Style x:Key="subMenuBarButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform Y="0"/>
            </Setter.Value>
        </Setter>


        <Style.Triggers>

            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Foreground" Value="#00C6FF"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <DoubleAnimation AutoReverse="True" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" To="-4" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" To="0" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F1F1F1" Duration="0:0:0.1" AccelerationRatio=".7"/>

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F1F1F1" Duration="0:0:0.15" AccelerationRatio=".7"/>

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="ellipseButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource titleColor1}"/>
        <Setter Property="Background" Value=" #00C6FF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                         Width="150"
                         Height="40"
                         CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#0098C4"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!-- Light Minimalist Button with 3D Glossy Look Style -->
    <Style x:Key="LightMinimalistButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="White" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E5E5E5"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#D6D6D6"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LightMinimalistButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Margin" Value="0,1,0,0"/>
    </Style>

    <Style x:Key="LightMinimalistButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#181818" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>

    <!-- Dark Minimalist Button with 3D Glossy Look Style -->
    <Style x:Key="DarkMinimalistButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#555555" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#444444"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#222222"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkMinimalistButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="DarkMinimalistButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>



    <!-- Light Minimalist Search Box Style -->
    <Style x:Key="LightMinimalistSearchBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="White" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark Minimalist Search Box Style -->
    <Style x:Key="DarkMinimalistSearchBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#555555" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckOutButton" TargetType="Button">
        <Setter Property="Height" Value="45" />
        <Setter Property="Background" Value="#0F8105"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="#f1f1f1"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" 
                        CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#555555" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#097200"/>
                            <Setter Property="BorderBrush" Value="#075E00"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#075E00"/>
                            <Setter Property="BorderBrush" Value="#097200"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckoutButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="CheckoutButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Margin" Value="0,0,10,0" />
    </Style>

    <!-- Light Minimalist ListView Style -->
    <Style x:Key="LightMinimalistListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <!-- Light Minimalist ListViewItem Style -->
    <Style x:Key="LightMinimalistListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="Margin" Value="0,0,0,1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="True">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#D6D6D6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E5E5E5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Light Minimalist GridViewColumnHeader Style -->
    <Style x:Key="LightMinimalistGridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="0,0,0,1" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Light Minimalist Radio Button with 3D Glossy Look Style -->
    <Style x:Key="LightMinimalistRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="White" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E5E5E5"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#D6D6D6"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LightMinimalistRadioButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
    </Style>

    <Style x:Key="LightMinimalistRadioButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#181818" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>

    <!-- Dark Minimalist Radio Button with 3D Glossy Look Style -->
    <Style x:Key="DarkMinimalistRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#555555" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#444444"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#222222"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkMinimalistRadioButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="DarkMinimalistRadioButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>


    <!-- Dark Minimalist Radio Button with 3D Glossy Look Style -->
    <Style x:Key="DarkMinimalistRadioButtonStyle_Menu" TargetType="RadioButton">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#555555" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#444444"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#222222"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkMinimalistRadioButtonText_Menu" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="5,3,0,0" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="DarkMinimalistRadioButtonIcon_Menu" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>

    <!-- Dark Minimalist Radio Button with 3D Glossy Look Style -->
    <Style x:Key="LightMinimalistRadioButtonStyle_Menu" TargetType="RadioButton">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="#181818"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5"/>
                            <Rectangle RadiusX="5" RadiusY="5" Opacity="0.2">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#555555" Offset="0.0" />
                                        <GradientStop Color="Transparent" Offset="0.7" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E5E5E5"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#D6D6D6"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LightMinimalistRadioButtonText_Menu" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="5,3,0,0" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="#181818"/>
    </Style>

    <Style x:Key="LightMinimalistRadioButtonIcon_Menu" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#181818" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>

    <!-- Light Minimalist ComboBox Toggle Button Style -->
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
                        <Path x:Name="Path" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="Black"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark Minimalist ComboBox Toggle Button Style -->
    <Style x:Key="DarkComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
                        <Path x:Name="Path" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="White"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="controlToggleButtonLight" TargetType="ToggleButton">
        <!-- ToggleButton style idle -->
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <fa:IconImage x:Name="Icon" Icon="Bars" Width="16" Height="16" Foreground="{TemplateBinding Foreground}" Margin="0,0,5,0">
                                <fa:IconImage.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </fa:IconImage.RenderTransform>
                                <fa:IconImage.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </fa:IconImage.RenderTransformOrigin>
                            </fa:IconImage>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Bounce Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <!-- Flip Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="-1" Duration="0:0:0.1" BeginTime="0:0:0.1"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1" BeginTime="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- ToggleButton style on hover -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#00C6FF" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F1F1F1" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="controlToggleButtonIconLight" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>


    <Style x:Key="controlToggleButton" TargetType="ToggleButton">
        <!-- ToggleButton style idle -->
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#181818"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <fa:IconImage x:Name="Icon" Icon="Bars" Width="16" Height="16" Foreground="{TemplateBinding Foreground}" Margin="0,0,5,0">
                                <fa:IconImage.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </fa:IconImage.RenderTransform>
                                <fa:IconImage.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </fa:IconImage.RenderTransformOrigin>
                            </fa:IconImage>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Bounce Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <!-- Flip Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="-1" Duration="0:0:0.1" BeginTime="0:0:0.1"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1" BeginTime="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- ToggleButton style on hover -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#00C6FF" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#181818" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="controlToggleButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>

    <Style x:Key="MenuRadioButtonStyle" TargetType="local:MenuRadioButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Margin" Value="5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MenuRadioButton">
                    <Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <fa:IconImage x:Name="Icon" Icon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" 
                                      Width="24" Height="24" 
                                      Foreground="{TemplateBinding Foreground}" 
                                      Margin="11,0,10,0">
                                <fa:IconImage.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </fa:IconImage.RenderTransform>
                                <fa:IconImage.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </fa:IconImage.RenderTransformOrigin>
                            </fa:IconImage>
                            <TextBlock x:Name="TextBlock"
                                   Text="{TemplateBinding Content}" 
                                   Style="{StaticResource menuButtonText}" 
                                   Visibility="{TemplateBinding ContentVisibility}"
                                   Margin="2.5,2.5,0,0"
                                   FontWeight="Regular"
                                   FontSize="17.5"
                                   Foreground="{TemplateBinding Foreground}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- MouseOver Trigger -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="Foreground" Value="#00C6FF"/>
                            <Setter TargetName="TextBlock" Property="Foreground" Value="#00C6FF"/>
                        </Trigger>
                        <!-- IsChecked Trigger -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Foreground" Value="#00C6FF"/>
                            <Setter TargetName="TextBlock" Property="Foreground" Value="#00C6FF"/>
                        </Trigger>
                        <!-- Click Event Animation -->
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Bounce Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <ColorAnimation Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#00C6FF" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Style Triggers for Hover and Reset -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#00C6FF" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F1F1F1" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuRadioButtonStyleDark" TargetType="local:MenuRadioButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Margin" Value="5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#181818"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MenuRadioButton">
                    <Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <fa:IconImage x:Name="Icon" Icon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" 
                                      Width="24" Height="24" 
                                      Foreground="{TemplateBinding Foreground}" 
                                      Margin="11,0,10,0">
                                <fa:IconImage.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </fa:IconImage.RenderTransform>
                                <fa:IconImage.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </fa:IconImage.RenderTransformOrigin>
                            </fa:IconImage>
                            <TextBlock x:Name="TextBlock"
                                   Text="{TemplateBinding Content}" 
                                   Style="{StaticResource menuButtonText}" 
                                   Visibility="{TemplateBinding ContentVisibility}"
                                   Margin="2.5,2.5,0,0"
                                   FontWeight="Regular"
                                   FontSize="17.5"
                                   Foreground="{TemplateBinding Foreground}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- MouseOver Trigger -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="Foreground" Value="#00C6FF"/>
                            <Setter TargetName="TextBlock" Property="Foreground" Value="#00C6FF"/>
                        </Trigger>
                        <!-- IsChecked Trigger -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Foreground" Value="#00C6FF"/>
                            <Setter TargetName="TextBlock" Property="Foreground" Value="#00C6FF"/>
                        </Trigger>
                        <!-- Click Event Animation -->
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Bounce Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <ColorAnimation Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="#00C6FF" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Style Triggers for Hover and Reset -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#00C6FF" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#181818" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <!--Button style idle-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#f1f1f1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="HoverBorder" 
                            Background="Transparent"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <fa:IconImage x:Name="Icon" Icon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" Width="24" Height="24" Foreground="{TemplateBinding Foreground}" Margin="11,0,10,0">
                                <fa:IconImage.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </fa:IconImage.RenderTransform>
                                <fa:IconImage.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </fa:IconImage.RenderTransformOrigin>
                            </fa:IconImage>
                            <TextBlock Text="{TemplateBinding Content}" 
                               Style="{StaticResource menuButtonText}"
                                       FontWeight="Light"
                               Margin="5,0,0,0"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverBorder" Property="Background" Value="#1D6CB5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverBorder" Property="Background" Value="#02498C"/>
                            <Setter TargetName="Icon" Property="Foreground" Value="#00C6FF"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Bounce Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.85" Duration="0:0:0.15" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.85" Duration="0:0:0.15" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Button style idle-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor1}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                         BorderThickness="4,0,0,0"
                         BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--Button style on hover-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource merlinBlueOver}"/>
                <Setter Property="Foreground" Value="{StaticResource color11}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

            <!--Button style on select-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource merlinBlueActive}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>


        </Style.Triggers>
    </Style>

    <!--Menu button icon-->
    <Style x:Key="menutButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="33"/>
        <Setter Property="Margin" Value="35,0,20,0"/>
    </Style>

    <!--Menu button text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LightMinimalistIconButtonStyle_browse" TargetType="Button">
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LightMinimalistButtonIcon_browse" TargetType="fa:IconImage">
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Margin" Value="0,6.5,0,0" />
        <Setter Property="Foreground" Value="#000"/>
    </Style>


    <Style x:Key="searchToggleButtonLight" TargetType="ToggleButton">
        <!-- ToggleButton style idle -->
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <fa:IconImage x:Name="Icon" Icon="Search" Width="16" Height="16" Foreground="{TemplateBinding Foreground}" Margin="0,0,5,0">
                                <fa:IconImage.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </fa:IconImage.RenderTransform>
                                <fa:IconImage.RenderTransformOrigin>
                                    <Point X="0.5" Y="0.5"/>
                                </fa:IconImage.RenderTransformOrigin>
                            </fa:IconImage>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Bounce Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.8" Duration="0:0:0.1" AutoReverse="True"/>
                                    <!-- Flip Animation -->
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="-1" Duration="0:0:0.1" BeginTime="0:0:0.1"/>
                                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.1" BeginTime="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- ToggleButton style on hover -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#00C6FF" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#F1F1F1" Duration="0:0:0.1" AccelerationRatio=".7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ActionButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Padding" Value="5,2" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3A3A3A" />
                            <Setter Property="BorderBrush" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>