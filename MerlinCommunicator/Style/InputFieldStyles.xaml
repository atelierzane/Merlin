<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <Style x:Key="MainSearchBar" TargetType="TextBox">
        <Setter Property= "Height" Value="40"/>
        <Setter Property= "Width" Value="465"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="#F4F4F4"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Padding" Value="5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="IBeam"/>
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>

        </Style.Triggers>

    </Style>
    <Style x:Key="MainSearchBarIcon" TargetType="fa:IconImage">
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="Opacity" Value="1"/>

        <Style.Triggers>
            <!-- Trigger when the parent UserControl is hovered -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=IsMouseOver}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Animate the foreground color -->
                            <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                        To="#CFCFCF" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Return the foreground color to default -->
                            <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                        To="#F1F1F1" Duration="0:0:0.3"/>

                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="MainSearchBarBackgroundLayer1" TargetType="Border">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="500"/>
        <Setter Property="Opacity" Value=".75"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush>
                    <GradientStop Color="{StaticResource merlinBlack}" Offset="0"/>
                    <GradientStop Color="{StaticResource merlinBlack}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=IsMouseOver}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="MainSearchBarBackgroundLayer2" TargetType="Border">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="500"/>
        <Setter Property="Opacity" Value="0"/>
        <!-- Default hidden -->
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush>
                    <GradientStop Color="{StaticResource windowBorderColor_Highlight}" Offset="0"/>
                    <GradientStop Color="{StaticResource windowBorderColor_Highlight}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- Trigger for mouse over TextBox (SearchBox) or the background -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=IsMouseOver}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.25"/>
                            <DoubleAnimation Storyboard.TargetProperty="Height" To="42.5" Duration="0:0:0.25"/>
                            <DoubleAnimation Storyboard.TargetProperty="Width" To="502.5" Duration="0:0:0.25"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                            <DoubleAnimation Storyboard.TargetProperty="Height" To="40" Duration="0:0:0.25"/>
                            <DoubleAnimation Storyboard.TargetProperty="Width" To="500" Duration="0:0:0.25"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <!-- Ensure focus does not hide the highlight -->
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>




    <!-- Light Minimalist ComboBox Style -->
    <Style x:Key="LightMinimalistComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" 
                                          Margin="10,5,35,5" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButtonTemplate}" Grid.Column="2" Focusable="false" 
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="#F1F1F1" BorderBrush="Gray" BorderThickness="1" CornerRadius="5"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <TextBox Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource DarkMinimalistSearchBoxStyle}" VerticalAlignment="Center" 
                                 HorizontalAlignment="Left" Background="Transparent" Foreground="{TemplateBinding Foreground}" Focusable="True" 
                                 Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="DropDownBorder" Property="Background" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark Minimalist ComboBox Style -->
    <Style x:Key="DarkMinimalistComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" 
                                          Margin="10,5,35,5" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButtonTemplate}" Grid.Column="2" Focusable="false" 
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="#333333" BorderBrush="Gray" BorderThickness="1" CornerRadius="5"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <TextBox Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource LightMinimalistSearchBoxStyle}" VerticalAlignment="Center" 
                                 HorizontalAlignment="Left" Background="Transparent" Foreground="{TemplateBinding Foreground}" Focusable="True" 
                                 Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#555555"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="DropDownBorder" Property="Background" Value="#444444"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownBorder" TargetType="Border">
        <Setter Property="Background" Value="#1A1A1A"/>
        <Setter Property="BorderBrush" Value="#333333"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>


    <Style x:Key="SuggestionText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="#F4F4F4"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource merlinBlueOver}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="MainSearchBarBackgroundLayer3" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{StaticResource merlinBlack}" Offset="0"/>
                    <GradientStop Color="{StaticResource merlinBlack}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="BorderThickness" Value="1,1,1,1.5"/>
    </Style>

    <Style x:Key="MainSearchBarHighlightableBorder" TargetType="Border">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        To="LightBlue"
                                        Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        To="Transparent"
                                        Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="2,0" />
    </Style>





</ResourceDictionary>