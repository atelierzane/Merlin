<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="merlinListView" TargetType="ListView">
        <Setter Property="Grid.Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />


    </Style>

    <Style x:Key="merlinListView_hiddenHeader" TargetType="GridViewColumnHeader">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border Background="Transparent"
                            BorderBrush ="Transparent">
                        <TextBlock Text="{TemplateBinding Content}"
                                   Padding="5"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center">

                        </TextBlock>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="FontFamily" Value="Inter" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Height" Value="30"/>



    </Style>


    <Style x:Key="merlinListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Foreground" Value="#F1F1F1"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Trigger for MouseOver State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="Background.Color"
                                                To="#CC787878" Duration="0:0:0.15"/>
                                        <!-- Gray with 80% opacity -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="Background.Color"
                                                To="Transparent" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!-- Trigger for Selected State with Flash Animation -->
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!-- Flash to highlight color then transition to selected color -->
                                        <ColorAnimation Storyboard.TargetName="Bd"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="LightSkyBlue" Duration="0:0:0.2"
                                                    AutoReverse="True"/>
                                        <ColorAnimation Storyboard.TargetName="Bd"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#CCBCD4E6" BeginTime="0:0:0.2" Duration="0:0:0.3"/>
                                        <!-- Semi-transparent selected color -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Setter TargetName="Bd" Property="Background" Value="#CCBCD4E6"/>
                            <!-- Light blue with 80% opacity as the final state -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <Style x:Key="tabItem_test" TargetType="TabItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#181818"/>
        <Setter Property="FontFamily" Value="Inter"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform Y="0"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Foreground" Value="HotPink"/>
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <DoubleAnimation AutoReverse="True" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" To="10" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>

                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" To="0" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <!-- Animation for mouse over -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="HotPink" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#181818" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>

            <!-- Animation for checked state -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                    To="HotPink" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                               To="#181818" Duration="0:0:0.15"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LightMinimalistListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <!-- Light Minimalist ListViewItem Style -->
    <Style x:Key="LightMinimalistListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="Margin" Value="0,0,0,1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="True">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#D6D6D6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E5E5E5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Light Minimalist GridViewColumnHeader Style -->
    <Style x:Key="LightMinimalistGridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="0,0,0,1" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>







</ResourceDictionary>